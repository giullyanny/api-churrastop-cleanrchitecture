// <auto-generated />
using System;
using APIChurrasTop.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiChurrasTop.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIChurrasTop.Domain.Entities.Agenda", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime")
                        .HasColumnName("data_alteracao");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao");

                    b.Property<string>("Observacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("observacao");

                    b.HasKey("Id");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("APIChurrasTop.Domain.Entities.AgendaPessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AgendaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agenda_id");

                    b.Property<bool>("ComBebida")
                        .HasColumnType("bit");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("pessoa_id");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("AgendaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("AgendaPessoa");
                });

            modelBuilder.Entity("APIChurrasTop.Domain.Entities.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("senha");

                    b.Property<string>("TelefoneCelular")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CPF" }, "UN_Pessoa_CPF")
                        .IsUnique()
                        .HasFilter("[cpf] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "UN_Pessoa_EMAIL")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("Pessoa");
                });

            modelBuilder.Entity("APIChurrasTop.Domain.Entities.AgendaPessoa", b =>
                {
                    b.HasOne("APIChurrasTop.Domain.Entities.Agenda", "Agenda")
                        .WithMany("AgendaPessoas")
                        .HasForeignKey("AgendaId")
                        .HasConstraintName("FK_AgendaPessoa_Agenda")
                        .IsRequired();

                    b.HasOne("APIChurrasTop.Domain.Entities.Pessoa", "Pessoa")
                        .WithMany("AgendaPessoas")
                        .HasForeignKey("PessoaId")
                        .HasConstraintName("FK_AgendaPessoa_Pessoa")
                        .IsRequired();

                    b.Navigation("Agenda");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("APIChurrasTop.Domain.Entities.Agenda", b =>
                {
                    b.Navigation("AgendaPessoas");
                });

            modelBuilder.Entity("APIChurrasTop.Domain.Entities.Pessoa", b =>
                {
                    b.Navigation("AgendaPessoas");
                });
#pragma warning restore 612, 618
        }
    }
}
